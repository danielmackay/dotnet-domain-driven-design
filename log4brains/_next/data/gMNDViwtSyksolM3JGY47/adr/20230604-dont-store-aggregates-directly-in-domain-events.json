{"pageProps":{"projectName":".NET Domain Driven Design","currentAdr":{"slug":"20230604-dont-store-aggregates-directly-in-domain-events","package":null,"title":"Don't Store Aggregates Directly in Domain Events","status":"accepted","supersededBy":null,"tags":[],"deciders":["Daniel Mackay"],"body":{"enhancedMdx":"\n## Context and Problem Statement\n\nWhen raising domain events the events themselves need to store data.  These events will be serialized / deserialized when they are processed by the outbox pattern.\n\n## Considered Options\n\n1. Wrap aggregates in domain events\n2. Store properties individually\n\n## Decision Outcome\n\nChosen option: \"2 - Store properties individually\", because it allows the outbox pattern to deserialize the domain events.\n\n## Pros and Cons of the Options <!-- optional -->\n\n### 1. Wrap aggregates in domain events\n\n- ✅ Easy to create and publish domain events\n- ❌ Outbox pattern can't deserialize the domain events due to the private constructors\n\n### 2. Store properties individually\n\n- ✅ Outbox pattern can deserialize the domain events\n- ❌ More verbose implementation\n"},"creationDate":"2023-06-04T01:26:07.000Z","lastEditDate":"2023-06-04T01:26:07.000Z","lastEditAuthor":"Daniel Mackay [SSW]","publicationDate":null,"file":{"relativePath":"docs/decisions/20230604-dont-store-aggregates-directly-in-domain-events.md","absolutePath":"/home/runner/work/dotnet-ef-domain-driven-design/dotnet-ef-domain-driven-design/docs/decisions/20230604-dont-store-aggregates-directly-in-domain-events.md"},"repository":{"provider":"github","viewUrl":"https://github.com/danielmackay/dotnet-ef-domain-driven-design/blob/master/docs/decisions/20230604-dont-store-aggregates-directly-in-domain-events.md"}},"l4bVersion":"1.0.1"},"__N_SSG":true}