{"pageProps":{"projectName":".NET Domain Driven Design","currentAdr":{"slug":"20230604-use-domain-services-to-encapsulate-external-behavior","package":null,"title":"Use Domain Services To Encapsulate External Behavior","status":"accepted","supersededBy":null,"tags":[],"deciders":["Daniel Mackay"],"body":{"enhancedMdx":"\n## Context and Problem Statement\n\nSometimes aggregates need to leverage functionality that cannot be implemented in the `Domain` (e.g. `Infrastructure` concerns).  \n\n## Decision Outcome\n\nWe need to introduce a `DomainService` interface in the `Domain` project, and an implementation in the `Application` or `Infrastructure` project.\n"},"creationDate":"2023-06-04T01:26:07.000Z","lastEditDate":"2023-06-04T01:26:07.000Z","lastEditAuthor":"Daniel Mackay [SSW]","publicationDate":null,"file":{"relativePath":"docs/decisions/20230604-use-domain-services-to-encapsulate-external-behavior.md","absolutePath":"/home/runner/work/dotnet-domain-driven-design/dotnet-domain-driven-design/docs/decisions/20230604-use-domain-services-to-encapsulate-external-behavior.md"},"repository":{"provider":"github","viewUrl":"https://github.com/danielmackay/dotnet-domain-driven-design/blob/master/docs/decisions/20230604-use-domain-services-to-encapsulate-external-behavior.md"}},"l4bVersion":"1.0.1"},"__N_SSG":true}